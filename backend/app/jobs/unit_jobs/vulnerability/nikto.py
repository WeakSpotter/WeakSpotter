from app.jobs.abstract_job import Job
from app.jobs.container import run_container
from app.jobs.license import License
from app.models.result import Result, Severity

import xmltodict
import json


class NiktoJob(Job):
    requirements = ["domain"]
    key = "nikto"
    name = "Nikto"
    license = License.GPLv2

    def run(self):
        """Performs a scan with Nikto on a domain or IP address."""
        domain = self._scan.data_dict.get("domain")

        self._raw_output = run_container(
            "ghcr.io/ozeliurs/nikto", f"nikto -h {domain} -Format xml -o -"
        )

    def parse_results(self):
        dict_data = xmltodict.parse(self._raw_output)
        self.result = json.dumps(dict_data, indent=4)

    def definitions(self):
        for items in self.result["niktoscan"]["scandetails"]["item"]:
            return [
                Result(
                    title=f"{items['description']}",
                    severity=Severity.warning,
                    score=-3,
                    description=f"La configuration du serveur présente une vulnérabilité connue identifiée par {items['id']}. Il est recommandé de mettre à jour ou de reconfigurer le serveur pour corriger cette vulnérabilité.",
                )
            ]
